# Rhodes API Listing by Function

This page lists the Rhodes APIs by function.

## Device Capabilities

[Alert API: Call system alert methods for popup, vibrate, or playing audio files](alert-api).

[Barcode API: Allows the device to recognize a barcode](barcode-api).

[BluetoothManager API: Makes a connection between your Bluetooth-equipped device and another Bluetooth-equipped device](bluetoothmanager-api).

[BluetoothSession API: Manages a connection session between your Bluetooth-equipped device and another Bluetooth-equipped device](bluetoothsession-api).

[Camera API: Use the camera on a device](camera-api).

[File API: Allows access to the Rhodes file structure](file-api).

[GeoLocation API: Access geolocation information from your device](geolocation-api).

[MapView API: Provides an embeddable map interface](mapview-api).

[RhoContact API: Provides access to a device's phone book and contacts](rhocontact-api).

[RhoEvent API: Access a device's calendar and events](rhoevent-api).

[RingtoneManager API: View and play a device's ringtones](ringtonemanager-api).

[SignatureTool API: Allows the device to take a signature and save it as an image](signaturetool-api).

[System API: Provides access to system information](system-api).

[Timer API: Lets the device use a timer](timer-api).

## NFC (near field communication) APIs

[NdefMessage API: Convert an NdefMessage into a format from which you can extract data](NdefMessage-api).

[NdefRecord API: Get data from near field communications Ndef tag records](NdefRecord-api).

[NFCManager API: Manage near field communications messages and records that your NFC application sends and receives](NFCManager-api).

[NFCTag API: Use the NFCTag class to get the NFC tag in certain formats, such as Ndef](NFCTag-api).

[NFCTagTechnology_IsoDep API: Subclass of NFCTagTechnology](NFCTagTechnology_IsoDep-api).

[NFCTagTechnology_MifareClassic API: Subclass of NFCTagTechnology](NFCTagTechnology_MifareClassic-api).

[NFCTagTechnology_MifareUltralight API: Subclass of NFCTagTechnology](NFCTagTechnology_MifareUltralight-api).

[NFCTagTechnology_Ndef API: Subclass of NFCTagTechnology](NFCTagTechnology_Ndef-api).

[NFCTagTechnology_NdefFormatable API: Subclass of NFCTagTechnology](NFCTagTechnology_NdefFormatable-api).

[NFCTagTechnology_NfcA API: Subclass of NFCTagTechnology](NFCTagTechnology_NfcA-api).

[NFCTagTechnology_NfcB API: Subclass of NFCTagTechnology](NFCTagTechnology_NfcB-api).

[NFCTagTechnology_NfcF API: Subclass of NFCTagTechnology](NFCTagTechnology_NfcF-api).

[NFCTagTechnology_NfcV API: Subclass of NFCTagTechnology](NFCTagTechnology_NfcV-api).

[NFCTagTechnology API: Use the NFCTagTechnology to connect to NFC tags and to determine their type. ](NFCTagTechnology-api).

## User Interface APIs

[DateTimePicker API: Allows the user to choose date and time](datetimepicker-api).

[Application Menu API: Customize the native application menu and controller menu items](menu-apis).

[User-Defined Menu-Toolbar-Tabbar Actions](menu-toolbar-tabbar-apis).

[NativeTabbar API: Customize the Rhodes tabbar at runtime](nativetabbar-api).

[NativeToolbar API: Customize the Rhodes toolbar at runtime](nativetoolbar-api).

[NavBar API: Native navigation bar for the iPhone](navigationbar-iphone-api).

[WebView API: Call on the WebView directly from your controller](webview-api).

## Web Services APIs

[AsyncHttp API: Asynchronously make calls to http services](asynchttp-api).

## Model APIs

[Model Controller API and Actions: Perform basic CRUD on the Rhodes model object](model-controller-api).

[Rhom API: Allows access to the Rhodes mini database object mapper, performing database operation on Rhodes model objects](rhom-api).

[RhoUtils API: Seed the Rhom database](rhoutils-api).

## Error and Logging APIs

[RhoError Class: Access error messages](rhoerror-api).

[RhoLog Class: Print messages in the log file rholog.txt](rholog-api).

[RhoController Class: Within a Rhodes controller, print messages in the log file rholog.txt](rhocontroller-api).

## Syncing APIs

[RhomSource API: Exposes sync information](rhomsource-api).

[SyncEngine API: Synchronize data for the Rhodes model and handle updates between the Rhodes application and the RhoConnect server](syncengine-api).

## Application APIs

[AppApplication API: Coordinate the startup of a Rhodes application](appapplication-api).

[RhoApplication API: Access methods for Rhodes applications](rhoapplication-api).

## Configuration APIs

[RhoConfig API: Allows access to the configuration properties](rhoconfig-api).






